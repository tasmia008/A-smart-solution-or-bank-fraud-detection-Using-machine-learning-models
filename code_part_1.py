# -*- coding: utf-8 -*-
"""topu part -1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i7qEUdSvzV0M5FOCu7hwqN1h8s0lg3J7
"""



!pip install pycaret

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/Base.csv')
df.head()

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline
from sklearn.preprocessing import LabelEncoder

# Importing module and initializing setup
from pycaret.classification import *

# Data Preprocessing
# Preprocessing with PyCaret
clf1 = setup(data = df, target = 'device_fraud_count',
             session_id=123, # Ensures reproducibility
             normalize=True,  # Normalize features for better performance
             transformation=True,  # For applying log transformation if necessary
             imputation_type='iterative', # Handle missing data
             fold_strategy='stratifiedkfold' # Ensures stratified K-fold splits
            )  # You c

# Comparing models
compare_models()

#plot_model(estimator = tuned_rf, plot = 'auc')
plot_model(estimator = rf, plot = 'auc')

plot_model(estimator = rf, plot = 'pr')

#plot_model(estimator = tuned_rf, plot = 'confusion_matrix')
plot_model(estimator = rf, plot = 'confusion_matrix')

#plot_model(estimator=tuned_rf, plot='feature')
plot_model(estimator=rf, plot='feature')





